In hand
--------

PatternGuards : GHC D818

TemplateHaskell.hs 1 : Trac #10268

TypeBrackets : Trac #10255 D823

SlidingDoClause : Semi allowed in if stmt, need to only take it if inside the span

LiftedConstructors : Trac #10268

PuncFunctions : Trac #10269 / D832

TypeSynParens : Fix in Annotate.hs

GHC.Orig : fix rdrName2String in ghc-exactprint

AnnPackageName : fix in ghc-exactprint

NestedLambda : AnnLambda is in the GHC Anns attached to an AST span. Fix in ghc-exactprint

DefaultTypeInstance : fix in ghc-exactprint

MagicHash : HsCharPrim must always have a trailing '#' char. ghc-exactprint

GADTRecords : ghc-exactprint issue, anns are there.

MangledSemiLet : looks like annotations are ok, so ghc-exactprint issue

SlidingListComp : The AnnVbar in GRHS is capturing the annotation that belongs in the enclosed HsDo.
                - need to work around in ghc-exactprint

MultiImplicitParams : IPBinds provides its dbinds in reverse order. Fix in ghc-exactprint

UnicodeSyntaxFailure : workaround for the unicode.

See https://github.com/ghc/ghc/blob/master/compiler/parser/Lexer.x#L813

If Unicode is enabled, those tokens, which are normally >1 char long, are now 1
char long. We can use that to decide which string to output, pick it up in Delta
and modify our anns to include the string.

MultiLineCommentWithPragmas : Lexer.x problem with nested #-}. Discards -} from it
           D829

TupleSections : AnnComma missing, issue in Parser
           D834
           
DoubleForall : Annotation is added, but span is not in AST. Need to find the
            place where nested HsForAllTy's get collapsed, that is where we lose the span.
                #10278
          one option is D833
          
TemplateHaskell  2 : ITopenExpQuote can be either '[|' or '[e|'. Need to capture src
                   : workaround : the annotated SrcSpan is either 2 or 3 chars long.
                   Trac ticket #10276

Undefined : BooleanFormula is not implemented.

ListComprehensions.hs
  - Comma annotation attached to wrong AST element, of the line before.
    Trac #10312 / D846

TypeFamilies.hs
  fix in ghc-exactprint by sorting the potentially infix
  operations in an applyListAnnotations, as per GHC.SynDecl

Undefined.hs
Undefined6.hs
Undefined11.hs
Undefined12.hs

  {-# MINIMAL ... #-} Annotations are there, just not in a very user friendly
  space. Must wait until 7.12 for a proper fix.


TemplateHaskell.hs
  In ghc-exactprint, use the first argument of HsBracket to determine what
  string to use for AnnOpen
  
        | SIMPLEQUOTE  qvar     { sLL $1 $> $ HsBracket (VarBr True  (unLoc $2)) }
        | SIMPLEQUOTE  qcon     { sLL $1 $> $ HsBracket (VarBr True  (unLoc $2)) }
        | TH_TY_QUOTE tyvar     { sLL $1 $> $ HsBracket (VarBr False (unLoc $2)) }
        | TH_TY_QUOTE gtycon    { sLL $1 $> $ HsBracket (VarBr False (unLoc $2)) }
        | '[|' exp '|]'       {% ams (sLL $1 $> $ HsBracket (ExpBr $2)) [mo $1,mc $3] }
        | '[||' exp '||]'     {% ams (sLL $1 $> $ HsBracket (TExpBr $2)) [mo $1,mc $3]}
        | '[t|' ctype '|]'    {% checkNoPartialType
                                   (text "in type brackets" <> colon
                                    <+> quotes (text "[t|" <+> ppr $2 <+> text "|]")) $2 >>
                                 ams (sLL $1 $> $ HsBracket (TypBr $2)) [mo $1,mc $3] }
        | '[p|' infixexp '|]' {% checkPattern empty $2 >>= \p ->
                                      ams (sLL $1 $> $ HsBracket (PatBr p))
                                          [mo $1,mc $3] }
        | '[d|' cvtopbody '|]' {% ams (sLL $1 $> $ HsBracket (DecBrL (snd $2)))
                                      (mo $1:mc $3:fst $2) }

TypeBrackets.hs
  The parentheses are attached to the SynDecl span
  fix in ghc-exactprint


LiftedConstructors.hs
  Annotations are there, fix in exactprint.

LambdaCase.hs
  Curly braces attached to HsLamCase SrcSpan, fix in ghc-exactprint


DefaultTypeInstance.hs
   Trac #10307 / D842


InfixPatternSynonyms.hs
   Manage print order in GHC.PatSynBind for the InfixPatSyn variant.
     Should be la,ln,lb. Fix in ghc-exactprint

LiftedInfixConstructor.hs

    It needs the new D825, but in its absence we need to reconstruct the original
    SrcSpan through knowing the length of the prefix for VarBr, then call mark on it
    so the normal RdrName processing can take place. That's why the parens don't
    show up

OptSig.hs
  The AnnDcolon is attached to the PatBind, same as the AnnEqual
  Fix in ghc-exactprint

GADTRecords.hs
  #10309 D848

GHC tickets still to be done
----------------------------

MultiLineWarningPragma.hs
  #10313. Unlikely to be fixed for 7.12

TypeSignatureParens.hs
  mkHsForAllTy discards parens
  - look for all paren type processing and make sure it is safe.
    GHC.HsPArrTy
    GHC.HsParTy
    GHC.ParPat
    GHC.PArrPat
    GHC.HsPar
    GHC.ExplicitPArr
    GHC.HsCmdPar
  #10314

StrangeTypeClass.hs
  Investigate. Empty context, annotations are lost.
  mkHsForAllTy discards SrcSpan for empty context
  #10315
  
Needs work
----------

------------------------------------------------------------------------

Using GHC api-annotations 2015-04-17

In hand
-------

ListComprehensions.hs
    GHC annotations look fine. Weird bug. Probably related to layout marking
    on the HsLet

TypeFamilies.hs
    GHC annotations are fine, suspect some strange interaction with the
    NoLayoutRules immediately before mark GHC.AnnEqual in markTyFamEqn
    
Minimal.hs
    As before, needs hack in ghc-exactprint, proper fix in 7.12

MangledSemiLet.hs
  As before. Seems the AnnSemiSep is being attached to the lhs of the PatBind,
  rather than the PatBind as a whole

UnicodeSyntaxFailure.hs
  A ghc-exactprint workaround would be to check the length of the span, and use
  the unicode symbol if it is 1, or "forall" if it is 5.

MultiLineWarningPragma.hs
  As before. ignore before 7.12

Shebang.hs
  Will have to do a workaround somehow.

DroppedDoSpace.hs
  Annotations seem ok, ghc-exactprint issue

IndentedDo.hs
  I suspect this is the same root cause as DroppedDoSpace, where the AnnLam is
  getting a DP of (0,0)
  Fix in ghc-exactprint
  
SpacesSplice.hs
  Use AnnName for the name part of a VarBr
  Fix in ghc-exactprint


SemiWorkout.hs
  I suspect this is also SigPatIn capturing the AnnSemiSep, as in MangledSemiLet
  
ShiftingLambda.hs
NestedDoLambda.hs
  Another instance of a lambda not getting annotated properly in a do expression


NestedDoLambda.hs
   `feedback` is being used as an infix operator in a HsCmdArrForm.
  This is constructed in RdrHsSyn as

    checkCmd _ (OpApp eLeft op _fixity eRight) = do
        -- OpApp becomes a HsCmdArrForm with a (Just fixity) in it
        c1 <- checkCommand eLeft
        c2 <- checkCommand eRight
        let arg1 = L (getLoc c1) $ HsCmdTop c1 placeHolderType placeHolderType []
            arg2 = L (getLoc c2) $ HsCmdTop c2 placeHolderType placeHolderType []
        return $ HsCmdArrForm op Nothing [arg1, arg2]

  But it can also be constructed in prefix form.
  We are going to have to sort the expr and cmds during printing.
  
Needs triage
------------

